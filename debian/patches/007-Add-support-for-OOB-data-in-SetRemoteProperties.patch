From f2870bdab8227ce1ac6c1feacb477e8a346be559 Mon Sep 17 00:00:00 2001
From: Bartosz Szatkowski <bulislaw@linux.com>
Date: Mon, 22 Aug 2011 13:39:15 +0200
Subject: [PATCH 2/3] Add support for OOB data in SetRemoteProperties

NOTE: THIS PATCH HAS TO BE BACKPORTED WITH NEW RELEASE
(PROBABLY WON'T BE UPSTREAMED)

Now its possible to exchange OOB simple pairing data through DBus API
method with other device properties.
---

diff --git a/plugins/dbusoob.c b/plugins/dbusoob.c
index 94aff72..f0bbd14 100644
--- a/plugins/dbusoob.c
+++ b/plugins/dbusoob.c
@@ -57,6 +57,8 @@ struct oob_remote_parameters {
 	bdaddr_t peer;
 	const char *address;
 	uint32_t class;
+	uint8_t *hash;
+	uint8_t *randomizer;
 	gboolean device_found;
 };
 
@@ -217,6 +219,42 @@ static void set_class(struct oob_remote_parameters *params)
 	params->device_found = TRUE;
 }
 
+static DBusMessage *parse_oob_data(DBusMessageIter *value, uint8_t **data,
+							DBusMessage *msg)
+{
+	DBusMessageIter array_iter;
+	int32_t len;
+	uint8_t *tmp;
+
+	if (dbus_message_iter_get_arg_type(value) != DBUS_TYPE_ARRAY)
+		return btd_error_invalid_args(msg);
+
+	dbus_message_iter_recurse(value, &array_iter);
+
+	dbus_message_iter_get_fixed_array(&array_iter, &tmp, &len);
+
+	if (len != 16)
+		return btd_error_invalid_args(msg);
+
+	*data = tmp;
+
+	return NULL;
+}
+
+static void set_oob_data(struct btd_adapter *adapter,
+				struct oob_remote_parameters *parameters)
+{
+	if (parameters->hash == NULL || parameters->randomizer == NULL) {
+		error("OOB data incomplete");
+
+		return;
+	}
+
+	if (btd_adapter_add_remote_oob_data(adapter, &parameters->peer,
+				parameters->hash, parameters->randomizer))
+		error("Adding remote OOB data failed");
+}
+
 static DBusMessage *parse_property(const char *property,
 				DBusMessageIter *value, DBusMessage *msg,
 				struct oob_remote_parameters *params)
@@ -224,6 +262,12 @@ static DBusMessage *parse_property(const char *property,
 	if (g_str_equal("Class", property))
 		return parse_class(value, params, msg);
 
+	if (g_str_equal("Hash", property))
+		return parse_oob_data(value, &params->hash, msg);
+
+	if (g_str_equal("Randomizer", property))
+		return parse_oob_data(value, &params->randomizer, msg);
+
 	return NULL;
 }
 
@@ -233,6 +277,9 @@ static void set_properties(struct btd_adapter *adapter,
 	if (params->class != 0)
 		set_class(params);
 
+	if (params->hash != NULL && params->randomizer != NULL)
+		set_oob_data(adapter, params);
+
 	if (params->device_found)
 		emit_device_found(adapter_get_path(adapter), params);
 }
-- 
1.7.4.1

