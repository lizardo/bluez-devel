From 6c61bb330a7376ca6fe674da026c5de1aab9981a Mon Sep 17 00:00:00 2001
From: Johan Hedberg <johan.hedberg@nokia.com>
Date: Tue, 17 Aug 2010 10:15:33 +0300
Subject: [PATCH] Fix missing cleanup for the phonet-at child process

We can't call g_remove_source for the child watch since then nobody will
call waitpid when the child dies. Instead set client->child_pid to 0
after sending SIGTERM so that the child watch function doesn't try to do
cleanup to processes that were already cleared (e.g. if an old phonet-at
process stays around while a new DUN client gets connected).

The patch is based upon the initial investigation and findings by
Dmitriy Paliy <dmitriy.paliy@nokia.com>.
---
 plugins/pnat.c |   24 +++++++++++++-----------
 1 files changed, 13 insertions(+), 11 deletions(-)

diff --git a/plugins/pnat.c b/plugins/pnat.c
index 3f5222f..6f02f51 100644
--- a/plugins/pnat.c
+++ b/plugins/pnat.c
@@ -72,7 +72,6 @@ struct dun_client {
 	char tty_name[PATH_MAX];
 
 	GPid pnatd_pid;
-	guint pnatd_watch;
 };
 
 struct dun_server {
@@ -103,15 +102,8 @@ static void disconnect(struct dun_server *server)
 		client->io_watch = 0;
 	}
 
-	if (client->pnatd_watch > 0) {
-		g_source_remove(client->pnatd_watch);
-		client->pnatd_watch = 0;
-		if (client->pnatd_pid > 0)
-			kill(client->pnatd_pid, SIGTERM);
-	}
-
 	if (client->pnatd_pid > 0) {
-		g_spawn_close_pid(client->pnatd_pid);
+		kill(client->pnatd_pid, SIGTERM);
 		client->pnatd_pid = 0;
 	}
 
@@ -162,8 +154,13 @@ static void pnatd_exit(GPid pid, gint status, gpointer user_data)
         else
                 DBG("pnatd (%d) was killed by signal %d", pid,
 							WTERMSIG(status));
+	g_spawn_close_pid(pid);
 
-	client->pnatd_watch = 0;
+	if (pid != client->pnatd_pid)
+		return;
+
+	/* So disconnect() doesn't send SIGTERM to a non-existing process */
+	client->pnatd_pid = 0;
 
 	disconnect(server);
 }
@@ -186,7 +183,12 @@ static gboolean start_pnatd(struct dun_server *server)
 	DBG("pnatd started for %s with pid %d", client->tty_name, pid);
 
 	client->pnatd_pid = pid;
-	client->pnatd_watch = g_child_watch_add(pid, pnatd_exit, server);
+
+	/* We do not store the GSource id since g_remove_source doesn't
+	 * make sense for a child watch. If the callback gets removed
+	 * waitpid won't be called and the child remains as a zombie)
+	 */
+	g_child_watch_add(pid, pnatd_exit, server);
 
 	return TRUE;
 }
-- 
1.7.0.4

